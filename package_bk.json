
"scripts": {
  "clean": "rimraf lib dist es coverage",
  "lint2": "eslint src test examples build",
  "lint": "eslint src test build",
  "tape": "babel-tape-runner \"test/*.test.js\" | faucet",
  "mocha": "cross-env BABEL_ENV=commonjs mocha --compilers js:babel-register --recursive",
  "test": "npm run --silent tape",
  "test:clear": "clear & npm run --silent test",
  "watch": "nodemon -q -x 'npm run --silent test:clear'",
  "test:cov": "cross-env BABEL_ENV=commonjs babel-node $(npm bin)/isparta cover $(npm bin)/_mocha -- --recursive",
  "test:examples": "cross-env BABEL_ENV=commonjs babel-node examples/testAll.js",
  "check:src": "npm run lint && npm run test",
  "check:examples": "cross-env BABEL_ENV=commonjs babel-node examples/testAll.js",
  "build:commonjs": "cross-env BABEL_ENV=commonjs babel src --out-dir lib",
  "build:es": "cross-env BABEL_ENV=es babel src --out-dir es",
  "build:umd": "cross-env BABEL_ENV=commonjs NODE_ENV=development webpack src/index.js dist/cqjs.js",
  "build:umd:min": "cross-env BABEL_ENV=commonjs NODE_ENV=production webpack src/index.js dist/cqjs.min.js",
  "build:examples": "cross-env BABEL_ENV=commonjs babel-node examples/buildAll.js",
  "build": "npm run build:commonjs && npm run build:es && npm run build:umd && npm run build:umd:min",
  "prepublish": "npm run clean && npm run check:src && npm run build && check-es3-syntax lib/ dist/ --kill",
  "docs:clean": "rimraf _book",
  "docs:prepare": "gitbook install",
  "docs:build": "npm run docs:prepare && gitbook build -g vizidrix/cqjs && cp logo/apple-touch-icon.png _book/gitbook/images/apple-touch-icon-precomposed-152.png && cp logo/favicon.ico _book/gitbook/images",
  "docs:watch": "npm run docs:prepare && gitbook serve",
  "docs:publish": "npm run docs:clean && npm run docs:build && cp CNAME _book && cd _book && git init && git commit --allow-empty -m 'update book' && git checkout -b gh-pages && touch .nojekyll && git add . && git commit -am 'update book' && git push git@github.com:vizidrix/cqjs gh-pages --force"
},
